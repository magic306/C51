51单片机中延时通常分为软件延时和定时器延时两种，软件延时过程中需要一直占用CPU，推荐在较简单的程序中使用，定时器延时配置起来相较前者更为复杂，但延时过程中不额外占用CPU，CPU可以去执行其他任务。
这两种方法各有优劣，可以根据自己的实际需要来选择使用。下面，我要介绍的是软件延时部分，定时器延时会在后面的定时计数器配置文章中提到。

首先介绍下指令周期，机器周期以及时钟周期。
1、指令周期：是取出一条指令并执行这条指令的时间。一般由若干个机器周期组成，是从取指令、分析指令到执行完所需的全部时间。
指令周期类型有非访内指令的指令周期、取数指令的指令周期、存数指令的指令周期、空操作指令和转移指令的指令周期。

2、机器周期：在计算机中，为了便于管理，常把一条指令的执行过程划分为若干个阶段，每一阶段完成一项工作。例如，取指令、存储器读、存储器写等，这每一项工作称为一个基本操作。
在51单片机中一个机器周期通常包括12个时钟周期。

3、时钟周期：也称为振荡周期，定义为时钟频率的倒数。时钟周期是计算机中最基本的、最小的时间单位。在一个时钟周期内，CPU仅完成一个最基本的动作。

软件延时是要使CPU去执行某条指令，占用一定的时钟周期，从而实现延时的目的。可使用for循环和_nop_()两种。下面是代码

#include <reg52.h>
#include <INTRINS.H>
typedef unsigned int uint;
typedef unsigned char uchar;
//*************************************
//名称 : Delay()
//功能 : 延时,延时时间为 10ms * del
//输入 : del
//输出 : 无
//*************************************
void Delay(uint del)
{
    uint i,j;
    for(i=0;i<del;i++)
    for(j=0;j<1827;j++)
    ;
}
void main()
{
	_nop_();    //空操作，占用一个机器周期=12个时钟周期；延时个数=延时时间*12/晶振频率
	_nop_();
	_nop_();
	delay(10);
}
